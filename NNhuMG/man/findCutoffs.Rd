% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findCutoffs.R
\name{findCutoffs}
\alias{findCutoffs}
\title{Subset-discriminating Cutoffs for Projection-based Gating}
\usage{
findCutoffs(con, delta, beta, threshold, recomp = FALSE, find.all = FALSE,
  max.cuts = 3, verbose = TRUE)
}
\arguments{
\item{con}{object returned by \code{\link{contourMerge}} or \code{\link{exprs2con}}}

\item{delta}{numeric threshold for robust effect size \eqn{\Delta}, needs to be provided if \code{recomp=TRUE}}

\item{beta}{numeric threshold for non-overlapping quantiles}

\item{threshold}{numeric for minimally required distance between two cutoffs (and between two distributions if \code{recomp=TRUE})}

\item{recomp}{logical flag whether to recompare subset separation using \code{\link{combCompare}} 
according to newly provided values for \code{delta}, \code{beta}, and \code{threshold}, Default: FALSE}

\item{find.all}{logical flag whether to ignore the result of \code{\link{combCompare}}, Default: FALSE}

\item{max.cuts}{the maximum number of desired cutoffs per marker, for which phenotypic separation will be tested, Default: 3}

\item{verbose}{flag to print out phenotypes according to found cutoffs and information 
about possible phenotypic separation using \code{max.cuts} cutoffs, Default: TRUE}
}
\value{
\code{con} object with added fields:
\describe{
  \item{\code{cutoffs}}{list with cutoffs per marker element}
  \item{\code{subset}}{named indices of subsets that phenotypically differ from at least one other subset}
  \item{\code{hinges}}{list with subsets' symmetric quantiles per marker element}
  \item{\code{mat.ind}}{matrix with indices of compared subsets in two columns}
  \item{\code{keep.mat}}{logical matrix indicating subset separation with markers in columns and subset comparisons in rows}
  \item{\code{delta.mat}}{matrix of effect sizes with markers in columns and subset comparisons in rows}
  \item{\code{sep.mat}}{square matrix summarizing which subsets are distinguishable}
  \item{\code{init}}{matrix with subset phenotypes according to all found cutoffs}
  \item{\code{reduc}}{\describe{
                 \item{\code{max.cuts}}{maximum number of desired cutoffs per marker}
                 \item{\code{cutoff.comb}}{list of per-marker cutoff combinations}
                 \item{\code{cutoff.comb.ind}}{indices mapping cutoff combinations to marker columns}
                 \item{\code{cutoff.comb.keep}}{constraints matrix for subset comparisons}
                 \item{\code{cutoff.comb.constraint}}{constraints matrix for cutoff combinations}
                 \item{\code{cutoff.comb.phenocode}}{phenotype matrix for each subset in rows and cutoff combination in columns}
               }}
}
}
\description{
computes cutoffs between subset "quantiloids" and finds possible projections 
       that allow discrimination with at most 3 cutoffs per marker
}
\details{
Only markers that provide separation of at least two subsets according to the \code{delta} and \code{beta}  
         limits as defined in \code{\link{contourMerge}} or \code{\link{exprs2con}} are being considered. This can  
         be overridden or controlled by \code{recomp=TRUE} and providing new threshold values for \code{delta} and \code{beta}.
         Detection of cutoffs depends on non-overlapping quantiles only and can therefore be tuned 
         by changing the value for \code{beta}. Setting \code{find.all=TRUE} will compute cutoffs
         inbetween two subsets even if they did not separate according to the \code{delta} and \code{beta}
         limits during comparison. Depending on the number and distribution of subsets, there might be an infeasibly large number
         of cutoffs per marker detected, and on the other hand, considerable redundancy in the phenotype definitions. The function
         performs an initial check whether subsets are discriminable with \code{max.cuts} or at most 3 cutoffs, a number that 
         usually suffices for subset phenotyping (see \code{\link{phenoQuant}}). A final set of markers and cutoffs can then   
         be computed using \code{\link{phenoReduce}}.
}
\examples{
\dontrun{
set.seed(123) 
x <- rbind(matrix(rnorm(100, sd = 0.3), ncol = 2, 
                  dimnames=list(NULL, c("A", "B"))),
           matrix(rnorm(36, mean = 1, sd = 0.3), ncol = 2),
           matrix(rnorm(100, mean = -1, sd = 0.3), ncol = 2))
BW <- chooseBandWidth(x) 

# get density estimate
fhat <- BW$fhats[[ BW$Hindex[1] ]]

# get contour list
cs <- contourLoc(fhat=fhat, offset = 0.01, n.levels = 20, peaks2merge = 3, minBins = 4,
                 keep.level.by = "max.bin.num", plotit = TRUE)

# remove contours containing too few observations
css <- shrinkSpur(cs) 

# compare and merge contour-gated subsets
csm <- contourMerge(css, keep.outer=F, keep.inner=F, data=x, 
                    delta=2, beta=0.15, threshold=0.2)
plotContours(csm, col="grey", pch="+", cex=0.5, lwd=2.5, fhat.levels=T, labels="peak.ids")

# compute cutoffs
cscut <- findCutoffs(csm, verbose=FALSE)
plotPheno(cscut, comp.sel=cscut$subset, plot.cutoffs=TRUE)

# reduce number of markers and cutoffs 
csred <- phenoReduce(cscut, target.num.marker = NA, b = 0.5)
plotPheno(csred, comp.sel=csred$subset, plot.cutoffs=TRUE)

# require 1 cutoff per marker
cscut <- findCutoffs(csm, max.cuts=1, verbose=FALSE)
csred <- phenoReduce(cscut, target.num.marker = NA, b = 0.5)
plotPheno(csred, comp.sel=csred$subset, plot.cutoffs=TRUE)
}
}
\seealso{
\code{\link{chooseBandWidth}}
 \code{\link{contourLoc}}
 \code{\link{shrinkSpur}}
 \code{\link{contourMerge}}
 \code{\link{phenoReduce}}
 \code{\link{combCompare}}
 \code{\link{cuts2Phenotype}}
 \code{\link{plotPheno}}
 \code{\link{plotContours}}
 \code{\link{phenoQuant}}
}
